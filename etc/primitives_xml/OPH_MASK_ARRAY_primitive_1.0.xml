<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE primitive SYSTEM "ophidiaprimitive.dtd">
<primitive name="oph_mask_array" version="1.0">
    <info>
        <abstract>[Behaviour]
Mask measure a with the mask measure b. For each 1 in measure b take the corresponding element in measure a.
For each element of measure b not equal to 1 do not take the corresponding element in measure a. In this case,
with oph_int or oph_long, the output element will be 0; with oph_float or oph_double, the output element will be a NaN.
        
[Parameters]
- input measure type : Ophidia typing. Supported types are pairs of:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- output measure type : Ophidia typing. Supported types are:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- measure a : first input measure.
- measure b : second input measure.

[Return type]
Binary-array.
        
[Examples]
oph_mask_array(&apos;OPH_DOUBLE|OPH_DOUBLE&apos;,&apos;OPH_DOUBLE&apos;,measure_a,measure_b)</abstract>
        <author>CMCC Foundation</author>
        <creationdate>19/06/2014</creationdate>
        <license url="http://www.gnu.org/licenses/gpl.txt">GPLv3</license>
        <return type="binary-array" />
	<operation type="simple"/>
    </info>
    <args>
	<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">input measure type</argument>
	<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">output measure type</argument>
	<argument type="binary-array" mandatory="yes">measure a</argument>
	<argument type="binary-array" mandatory="yes">measure b</argument>
    </args>
</primitive>
