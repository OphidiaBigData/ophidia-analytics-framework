/* soapH.h
   Generated by gSOAP 2.8.27 from oph_wsdl.h

gSOAP XML Web services tools
Copyright (C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (26)
#endif

#define soap_default_xsd__byte(soap, a) soap_default_byte(soap, a)


#define soap_xsd__byte2s soap_byte2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__byte(struct soap*, const char*, int, const char *, const char*);

#define soap_s2xsd__byte soap_s2byte

SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_xsd__byte
#define soap_write_xsd__byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__byte(soap, data, "xsd:byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_xsd__byte
#define soap_read_xsd__byte(soap, data) ( ((data) ? (soap_default_xsd__byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (8)
#endif

#define soap_default_xsd__boolean(soap, a) soap_default_byte(soap, a)


#define soap_xsd__boolean2s soap_byte2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const char *, const char*);

#define soap_s2xsd__boolean soap_s2byte

SOAP_FMAC3 char * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, char *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( ((data) ? (soap_default_xsd__boolean(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( ((data) ? (soap_default_byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (25)
#endif

#define soap_default_xsd__short(soap, a) soap_default_short(soap, a)


#define soap_xsd__short2s soap_short2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__short(struct soap*, const char*, int, const short *, const char*);

#define soap_s2xsd__short soap_s2short

SOAP_FMAC3 short * SOAP_FMAC4 soap_in_xsd__short(struct soap*, const char*, short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_xsd__short
#define soap_write_xsd__short(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__short(soap, data, "xsd:short", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_xsd__short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_xsd__short
#define soap_read_xsd__short(soap, data) ( ((data) ? (soap_default_xsd__short(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__short(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( ((data) ? (soap_default_short(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_short(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( ((data) ? (soap_default_int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (23)
#endif

#define soap_default_xsd__int(soap, a) soap_default_long(soap, a)


#define soap_xsd__int2s soap_long2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__int(struct soap*, const char*, int, const long *, const char*);

#define soap_s2xsd__int soap_s2long

SOAP_FMAC3 long * SOAP_FMAC4 soap_in_xsd__int(struct soap*, const char*, long *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__int(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_xsd__int
#define soap_write_xsd__int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__int(soap, data, "xsd:int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_xsd__int(struct soap*, long *, const char*, const char*);

#ifndef soap_read_xsd__int
#define soap_read_xsd__int(soap, data) ( ((data) ? (soap_default_xsd__int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_long(struct soap*, long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_long(struct soap*, const char*, int, const long *, const char*);
SOAP_FMAC3 long * SOAP_FMAC4 soap_in_long(struct soap*, const char*, long *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_long(struct soap*, const long *, const char*, const char*);

#ifndef soap_write_long
#define soap_write_long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_long(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long * SOAP_FMAC4 soap_get_long(struct soap*, long *, const char*, const char*);

#ifndef soap_read_long
#define soap_read_long(soap, data) ( ((data) ? (soap_default_long(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_long(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (21)
#endif

#define soap_default_xsd__long(soap, a) soap_default_LONG64(soap, a)


#define soap_xsd__long2s soap_LONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__long(struct soap*, const char*, int, const LONG64 *, const char*);

#define soap_s2xsd__long soap_s2LONG64

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_xsd__long(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__long(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_xsd__long
#define soap_write_xsd__long(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__long(soap, data, "xsd:long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__long(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__long
#define soap_read_xsd__long(soap, data) ( ((data) ? (soap_default_xsd__long(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__long(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( ((data) ? (soap_default_LONG64(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_LONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (16)
#endif

#define soap_default_xsd__float(soap, a) soap_default_float(soap, a)


#define soap_xsd__float2s soap_float2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__float(struct soap*, const char*, int, const float *, const char*);

#define soap_s2xsd__float soap_s2float

SOAP_FMAC3 float * SOAP_FMAC4 soap_in_xsd__float(struct soap*, const char*, float *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_xsd__float
#define soap_write_xsd__float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__float(soap, data, "xsd:float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_xsd__float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_xsd__float
#define soap_read_xsd__float(soap, data) ( ((data) ? (soap_default_xsd__float(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( ((data) ? (soap_default_float(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
#endif

#define soap_default_xsd__double(soap, a) soap_default_double(soap, a)


#define soap_xsd__double2s soap_double2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__double(struct soap*, const char*, int, const double *, const char*);

#define soap_s2xsd__double soap_s2double

SOAP_FMAC3 double * SOAP_FMAC4 soap_in_xsd__double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_xsd__double
#define soap_write_xsd__double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__double(soap, data, "xsd:double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_xsd__double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_xsd__double
#define soap_read_xsd__double(soap, data) ( ((data) ? (soap_default_xsd__double(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( ((data) ? (soap_default_double(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (39)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)


#define soap_xsd__unsignedByte2s soap_unsignedByte2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);

#define soap_s2xsd__unsignedByte soap_s2unsignedByte

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( ((data) ? (soap_default_xsd__unsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( ((data) ? (soap_default_unsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (37)
#endif

#define soap_default_xsd__unsignedShort(soap, a) soap_default_unsignedShort(soap, a)


#define soap_xsd__unsignedShort2s soap_unsignedShort2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);

#define soap_s2xsd__unsignedShort soap_s2unsignedShort

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_xsd__unsignedShort(struct soap*, const char*, unsigned short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_xsd__unsignedShort
#define soap_write_xsd__unsignedShort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__unsignedShort(soap, data, "xsd:unsignedShort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_xsd__unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_xsd__unsignedShort
#define soap_read_xsd__unsignedShort(soap, data) ( ((data) ? (soap_default_xsd__unsignedShort(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__unsignedShort(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( ((data) ? (soap_default_unsignedShort(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedShort(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( ((data) ? (soap_default_unsignedInt(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (35)
#endif

#define soap_default_xsd__unsignedInt(soap, a) soap_default_unsignedLong(soap, a)


#define soap_xsd__unsignedInt2s soap_unsignedLong2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedInt(struct soap*, const char*, int, const unsigned long *, const char*);

#define soap_s2xsd__unsignedInt soap_s2unsignedLong

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_xsd__unsignedInt(struct soap*, const char*, unsigned long *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedInt(struct soap*, const unsigned long *, const char*, const char*);

#ifndef soap_write_xsd__unsignedInt
#define soap_write_xsd__unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__unsignedInt(soap, data, "xsd:unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_xsd__unsignedInt(struct soap*, unsigned long *, const char*, const char*);

#ifndef soap_read_xsd__unsignedInt
#define soap_read_xsd__unsignedInt(soap, data) ( ((data) ? (soap_default_xsd__unsignedInt(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedLong
#define SOAP_TYPE_unsignedLong (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedLong(struct soap*, unsigned long *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedLong(struct soap*, const char*, int, const unsigned long *, const char*);
SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_in_unsignedLong(struct soap*, const char*, unsigned long *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedLong(struct soap*, const unsigned long *, const char*, const char*);

#ifndef soap_write_unsignedLong
#define soap_write_unsignedLong(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedLong(soap, data, "unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned long * SOAP_FMAC4 soap_get_unsignedLong(struct soap*, unsigned long *, const char*, const char*);

#ifndef soap_read_unsignedLong
#define soap_read_unsignedLong(soap, data) ( ((data) ? (soap_default_unsignedLong(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedLong(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (32)
#endif

#define soap_default_xsd__unsignedLong(soap, a) soap_default_ULONG64(soap, a)


#define soap_xsd__unsignedLong2s soap_ULONG642s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedLong(struct soap*, const char*, int, const ULONG64 *, const char*);

#define soap_s2xsd__unsignedLong soap_s2ULONG64

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_xsd__unsignedLong(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedLong(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_xsd__unsignedLong
#define soap_write_xsd__unsignedLong(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__unsignedLong(soap, data, "xsd:unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_xsd__unsignedLong(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_xsd__unsignedLong
#define soap_read_xsd__unsignedLong(soap, data) ( ((data) ? (soap_default_xsd__unsignedLong(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__unsignedLong(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_ULONG64
#define SOAP_TYPE_ULONG64 (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ULONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( ((data) ? (soap_default_ULONG64(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (11)
#endif

#define soap_default_xsd__dateTime(soap, a) soap_default_dateTime(soap, a)


#define soap_xsd__dateTime2s soap_dateTime2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__dateTime(struct soap*, const char*, int, const time_t *, const char*);

#define soap_s2xsd__dateTime soap_s2dateTime

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_xsd__dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_xsd__dateTime
#define soap_write_xsd__dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__dateTime(soap, data, "xsd:dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_xsd__dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_xsd__dateTime
#define soap_read_xsd__dateTime(soap, data) ( ((data) ? (soap_default_xsd__dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_dateTime
#define SOAP_TYPE_dateTime (10)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_dateTime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( ((data) ? (soap_default_dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_oph__oph_notify
#define SOAP_TYPE_oph__oph_notify (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_oph__oph_notify(struct soap*, struct oph__oph_notify *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_oph__oph_notify(struct soap*, const struct oph__oph_notify *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_oph__oph_notify(struct soap*, const char*, int, const struct oph__oph_notify *, const char*);
SOAP_FMAC3 struct oph__oph_notify * SOAP_FMAC4 soap_in_oph__oph_notify(struct soap*, const char*, struct oph__oph_notify *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_oph__oph_notify(struct soap*, const struct oph__oph_notify *, const char*, const char*);

#ifndef soap_write_oph__oph_notify
#define soap_write_oph__oph_notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_oph__oph_notify(soap, data), 0) || soap_put_oph__oph_notify(soap, data, "oph:oph-notify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct oph__oph_notify * SOAP_FMAC4 soap_get_oph__oph_notify(struct soap*, struct oph__oph_notify *, const char*, const char*);

#ifndef soap_read_oph__oph_notify
#define soap_read_oph__oph_notify(soap, data) ( ((data) ? (soap_default_oph__oph_notify(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_oph__oph_notify(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_oph__oph_notifyResponse
#define SOAP_TYPE_oph__oph_notifyResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_oph__oph_notifyResponse(struct soap*, struct oph__oph_notifyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_oph__oph_notifyResponse(struct soap*, const struct oph__oph_notifyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_oph__oph_notifyResponse(struct soap*, const char*, int, const struct oph__oph_notifyResponse *, const char*);
SOAP_FMAC3 struct oph__oph_notifyResponse * SOAP_FMAC4 soap_in_oph__oph_notifyResponse(struct soap*, const char*, struct oph__oph_notifyResponse *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_oph__oph_notifyResponse(struct soap*, const struct oph__oph_notifyResponse *, const char*, const char*);

#ifndef soap_write_oph__oph_notifyResponse
#define soap_write_oph__oph_notifyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_oph__oph_notifyResponse(soap, data), 0) || soap_put_oph__oph_notifyResponse(soap, data, "oph:oph-notifyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct oph__oph_notifyResponse * SOAP_FMAC4 soap_get_oph__oph_notifyResponse(struct soap*, struct oph__oph_notifyResponse *, const char*, const char*);

#ifndef soap_read_oph__oph_notifyResponse
#define soap_read_oph__oph_notifyResponse(soap, data) ( ((data) ? (soap_default_oph__oph_notifyResponse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_oph__oph_notifyResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerToxsd__int
#define SOAP_TYPE_PointerToxsd__int (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__int(struct soap*, long *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__int(struct soap*, const char *, int, long *const*, const char *);
SOAP_FMAC3 long ** SOAP_FMAC4 soap_in_PointerToxsd__int(struct soap*, const char*, long **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__int(struct soap*, long *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__int
#define soap_write_PointerToxsd__int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__int(soap, data), 0) || soap_put_PointerToxsd__int(soap, data, "xsd:int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 long ** SOAP_FMAC4 soap_get_PointerToxsd__int(struct soap*, long **, const char*, const char*);

#ifndef soap_read_PointerToxsd__int
#define soap_read_PointerToxsd__int(soap, data) ( ((data) ? (soap_default_PointerToxsd__int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (42)
#endif

#define soap_default_xsd__token(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__token(struct soap*, char *const*);

#define soap_xsd__token2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__token soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__token(soap, data), 0) || soap_put_xsd__token(soap, data, "xsd:token", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__token(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( ((data) ? (soap_default_xsd__token(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__token(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__normalizedString
#define SOAP_TYPE_xsd__normalizedString (41)
#endif

#define soap_default_xsd__normalizedString(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__normalizedString(struct soap*, char *const*);

#define soap_xsd__normalizedString2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__normalizedString(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__normalizedString soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__normalizedString(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__normalizedString(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__normalizedString
#define soap_write_xsd__normalizedString(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__normalizedString(soap, data), 0) || soap_put_xsd__normalizedString(soap, data, "xsd:normalizedString", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__normalizedString(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__normalizedString
#define soap_read_xsd__normalizedString(soap, data) ( ((data) ? (soap_default_xsd__normalizedString(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__normalizedString(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (40)
#endif

#define soap_default_xsd__string(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);

#define soap_xsd__string2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__string soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__string(soap, data), 0) || soap_put_xsd__string(soap, data, "xsd:string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( ((data) ? (soap_default_xsd__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (30)
#endif

#define soap_default_xsd__positiveInteger(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__positiveInteger(struct soap*, char *const*);

#define soap_xsd__positiveInteger2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__positiveInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__positiveInteger soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__positiveInteger(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__positiveInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__positiveInteger
#define soap_write_xsd__positiveInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__positiveInteger(soap, data), 0) || soap_put_xsd__positiveInteger(soap, data, "xsd:positiveInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__positiveInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__positiveInteger
#define soap_read_xsd__positiveInteger(soap, data) ( ((data) ? (soap_default_xsd__positiveInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__positiveInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (29)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, char *const*);

#define soap_xsd__nonNegativeInteger2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__nonNegativeInteger soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__nonNegativeInteger(soap, data), 0) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( ((data) ? (soap_default_xsd__nonNegativeInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__negativeInteger
#define SOAP_TYPE_xsd__negativeInteger (28)
#endif

#define soap_default_xsd__negativeInteger(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__negativeInteger(struct soap*, char *const*);

#define soap_xsd__negativeInteger2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__negativeInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__negativeInteger soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__negativeInteger(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__negativeInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__negativeInteger
#define soap_write_xsd__negativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__negativeInteger(soap, data), 0) || soap_put_xsd__negativeInteger(soap, data, "xsd:negativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__negativeInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__negativeInteger
#define soap_read_xsd__negativeInteger(soap, data) ( ((data) ? (soap_default_xsd__negativeInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__negativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__nonPositiveInteger
#define SOAP_TYPE_xsd__nonPositiveInteger (27)
#endif

#define soap_default_xsd__nonPositiveInteger(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonPositiveInteger(struct soap*, char *const*);

#define soap_xsd__nonPositiveInteger2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonPositiveInteger(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__nonPositiveInteger soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__nonPositiveInteger(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonPositiveInteger(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__nonPositiveInteger
#define soap_write_xsd__nonPositiveInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__nonPositiveInteger(soap, data), 0) || soap_put_xsd__nonPositiveInteger(soap, data, "xsd:nonPositiveInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__nonPositiveInteger(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__nonPositiveInteger
#define soap_read_xsd__nonPositiveInteger(soap, data) ( ((data) ? (soap_default_xsd__nonPositiveInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__nonPositiveInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (19)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, char *const*);

#define soap_xsd__integer2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__integer soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__integer(soap, data), 0) || soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__integer(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( ((data) ? (soap_default_xsd__integer(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__integer(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (18)
#endif

#define soap_default_xsd__decimal(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__decimal(struct soap*, char *const*);

#define soap_xsd__decimal2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__decimal(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__decimal soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__decimal(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__decimal(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__decimal
#define soap_write_xsd__decimal(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__decimal(soap, data), 0) || soap_put_xsd__decimal(soap, data, "xsd:decimal", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__decimal(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__decimal
#define soap_read_xsd__decimal(soap, data) ( ((data) ? (soap_default_xsd__decimal(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__decimal(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (17)
#endif

#define soap_default_xsd__time(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__time(struct soap*, char *const*);

#define soap_xsd__time2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__time(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__time soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__time(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__time(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__time
#define soap_write_xsd__time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__time(soap, data), 0) || soap_put_xsd__time(soap, data, "xsd:time", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__time(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__time
#define soap_read_xsd__time(soap, data) ( ((data) ? (soap_default_xsd__time(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__time(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (14)
#endif

#define soap_default_xsd__duration(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__duration(struct soap*, char *const*);

#define soap_xsd__duration2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__duration(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__duration soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__duration(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__duration(soap, data), 0) || soap_put_xsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__duration(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( ((data) ? (soap_default_xsd__duration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__duration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (9)
#endif

#define soap_default_xsd__date(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__date(struct soap*, char *const*);

#define soap_xsd__date2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__date(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__date soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__date(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__date(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__date
#define soap_write_xsd__date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__date(soap, data), 0) || soap_put_xsd__date(soap, data, "xsd:date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__date(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__date
#define soap_read_xsd__date(soap, data) ( ((data) ? (soap_default_xsd__date(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__date(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (7)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, char *const*);

#define soap_xsd__anyURI2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2xsd__anyURI soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data), 0) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( ((data) ? (soap_default_xsd__anyURI(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( ((data) ? (soap_default__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( ((data) ? (soap_default_string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
