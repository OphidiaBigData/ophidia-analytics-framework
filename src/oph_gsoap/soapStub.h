/* soapStub.h
   Generated by gSOAP 2.8.27 from oph_wsdl.h

gSOAP XML Web services tools
Copyright (C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20827
# error "GSOAP VERSION 20827 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs, and Unions                                               *
 *                                                                            *
\******************************************************************************/

struct oph__oph_notifyResponse;	/* oph_wsdl.h:70 */
struct oph__oph_notify;	/* oph_wsdl.h:70 */

/* oph_wsdl.h:70 */
#ifndef SOAP_TYPE_oph__oph_notifyResponse
#define SOAP_TYPE_oph__oph_notifyResponse (45)
/* oph:oph-notifyResponse complex type: */
struct oph__oph_notifyResponse
{
	long *oph_notify_response;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of XSD type xsd:int */
};
#endif

/* oph_wsdl.h:70 */
#ifndef SOAP_TYPE_oph__oph_notify
#define SOAP_TYPE_oph__oph_notify (46)
/* oph:oph-notify complex type: */
struct oph__oph_notify
{
	char *oph_notify_data;	/* optional element of XSD type xsd:string */
	char *oph_notify_json;	/* optional element of XSD type xsd:string */
};
#endif

/* oph_wsdl.h:72 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (47)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* oph_wsdl.h:72 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (48)
/* Type SOAP_ENV__Code is a recursive data type (in)directly referencing itself through its (base) class members */
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of XSD type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of XSD type SOAP-ENV:Code */
};
#endif
#endif

/* oph_wsdl.h:72 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (50)
/* SOAP-ENV:Detail complex type: */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below)
	   WARNING: do not create a cyclic data structure graph throught this element unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
	void *fault;	/* transient (not serialized) */
};
#endif
#endif

/* oph_wsdl.h:72 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (53)
/* SOAP-ENV:Reason complex type: */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of XSD type xsd:string */
};
#endif
#endif

/* oph_wsdl.h:72 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (54)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of XSD type xsd:QName */
	char *faultstring;	/* optional element of XSD type xsd:string */
	char *faultactor;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of XSD type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of XSD type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of XSD type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of XSD type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of XSD type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of XSD type SOAP-ENV:Detail */
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* oph_wsdl.h:21 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

/* oph_wsdl.h:21 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

/* oph_wsdl.h:21 */
#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (7)
typedef char *xsd__anyURI;
#endif

/* oph_wsdl.h:22 */
#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (8)
typedef char xsd__boolean;
#endif

/* oph_wsdl.h:23 */
#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (9)
typedef char *xsd__date;
#endif

/* oph_wsdl.h:24 */
#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (11)
typedef time_t xsd__dateTime;
#endif

/* oph_wsdl.h:25 */
#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
typedef double xsd__double;
#endif

/* oph_wsdl.h:26 */
#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (14)
typedef char *xsd__duration;
#endif

/* oph_wsdl.h:27 */
#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (16)
typedef float xsd__float;
#endif

/* oph_wsdl.h:28 */
#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (17)
typedef char *xsd__time;
#endif

/* oph_wsdl.h:29 */
#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (18)
typedef char *xsd__decimal;
#endif

/* oph_wsdl.h:30 */
#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (19)
typedef char *xsd__integer;
#endif

/* oph_wsdl.h:31 */
#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (21)
typedef LONG64 xsd__long;
#endif

/* oph_wsdl.h:32 */
#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (23)
typedef long xsd__int;
#endif

/* oph_wsdl.h:33 */
#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (25)
typedef short xsd__short;
#endif

/* oph_wsdl.h:34 */
#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (26)
typedef char xsd__byte;
#endif

/* oph_wsdl.h:35 */
#ifndef SOAP_TYPE_xsd__nonPositiveInteger
#define SOAP_TYPE_xsd__nonPositiveInteger (27)
typedef char *xsd__nonPositiveInteger;
#endif

/* oph_wsdl.h:36 */
#ifndef SOAP_TYPE_xsd__negativeInteger
#define SOAP_TYPE_xsd__negativeInteger (28)
typedef char *xsd__negativeInteger;
#endif

/* oph_wsdl.h:37 */
#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (29)
typedef char *xsd__nonNegativeInteger;
#endif

/* oph_wsdl.h:38 */
#ifndef SOAP_TYPE_xsd__positiveInteger
#define SOAP_TYPE_xsd__positiveInteger (30)
typedef char *xsd__positiveInteger;
#endif

/* oph_wsdl.h:39 */
#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (32)
typedef ULONG64 xsd__unsignedLong;
#endif

/* oph_wsdl.h:40 */
#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (35)
typedef unsigned long xsd__unsignedInt;
#endif

/* oph_wsdl.h:41 */
#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (37)
typedef unsigned short xsd__unsignedShort;
#endif

/* oph_wsdl.h:42 */
#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (39)
typedef unsigned char xsd__unsignedByte;
#endif

/* oph_wsdl.h:43 */
#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (40)
typedef char *xsd__string;
#endif

/* oph_wsdl.h:44 */
#ifndef SOAP_TYPE_xsd__normalizedString
#define SOAP_TYPE_xsd__normalizedString (41)
typedef char *xsd__normalizedString;
#endif

/* oph_wsdl.h:45 */
#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (42)
typedef char *xsd__token;
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 oph__oph_notify(struct soap*, char *oph_notify_data, char *oph_notify_json, long *oph_notify_response);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_oph__oph_notify(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_oph__oph_notify(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *oph_notify_data, char *oph_notify_json, long *oph_notify_response);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
