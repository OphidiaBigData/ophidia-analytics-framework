<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE primitive SYSTEM "ophidiaprimitive.dtd">
<primitive name="oph_predicate3" version="1.0">
    <info>
        <abstract>[Behaviour]
Evaluates a predicate3. For each item of input array, if &apos;condition&apos; is met then &apos;expression1&apos; is executed, else &apos;expression2&apos; is executed.

[Parameters]
- input measure type : Ophidia typing. Supported types are:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- output measure type : Ophidia typing. Supported types are:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- measure : input measure.
- condition : condition to be verified. Any boolean expression is acceptable.
- expression 1 : expression executed if condition is met.
- expression 2 : expression executed if condition is not met.
- occurrence : if is set to a number &apos;n&apos; then expression 1 is evaluated only for the &apos;n&apos;-th of the condition; otherwise the expression 2 is evaluated.
               Use &apos;first&apos; or &apos;begin&apos; for the first occurrence.
               Use &apos;last&apos; or &apos;end&apos; for the last occurrence.
               Use &apos;all&apos; to skip this check (defualt).
                 
[Return type]
Binary-array.

[Examples]
Extract measures with temperature values greater than 300 K.
oph_predicate3(&apos;OPH_DOUBLE&apos;,&apos;OPH_DOUBLE&apos;,measure,&apos;x&gt;300&apos;,&apos;1&apos;,&apos;0&apos;)</abstract>
        <author>CMCC Foundation</author>
        <category>Transformation</category>
        <creationdate>12/02/2016</creationdate>
        <license url="http://www.gnu.org/licenses/gpl.txt">GPLv3</license>
        <return type="binary-array" />
        <operation type="simple"/>
    </info>
    <args>
		<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">input measure type</argument>
		<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">output measure type</argument>
		<argument type="binary-array" mandatory="yes">measure</argument>
		<argument type="string" mandatory="yes">condition</argument>
		<argument type="string" mandatory="yes">expression 1</argument>
		<argument type="string" mandatory="yes">expression 2</argument>
		<argument type="string" mandatory="no" default="all">occurrence</argument>
    </args>
</primitive>
