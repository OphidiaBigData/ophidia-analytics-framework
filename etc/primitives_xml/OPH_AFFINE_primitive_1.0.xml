<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE primitive SYSTEM "ophidiaprimitive.dtd">
<primitive name="oph_affine" version="1.0">
    <info>
        <abstract>[Behaviour]
Apply an affine transformation to each element of the measure array: each item is multiplied by a scalar value and, then, the result is summed to a translation value.
        
[Parameters]
- input measure type : Ophidia typing. Supported types are:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- output measure type : Ophidia typing. Supported types are:
					&apos;oph_double&apos;;
					&apos;oph_float&apos;;
					&apos;oph_long&apos;;
					&apos;oph_int&apos;;
					&apos;oph_short&apos;;
					&apos;oph_byte&apos;.
- measure : input measure.
- scalar value : number to be multiplied by each element of the input measure. Default is 1.
- translation value : number to be summed to output measure after the multiplication. Default is 0.
  
[Return type]
Binary-array.
        
[Examples]
Multiply by 2 each element of the input array and sum 10 to the results.
oph_affine(&apos;OPH_DOUBLE&apos;,&apos;OPH_DOUBLE&apos;,measure,2,10)</abstract>
        <author>CMCC Foundation</author>
        <category>Arithmetic</category>
        <creationdate>29/07/2018</creationdate>
        <license url="http://www.gnu.org/licenses/gpl.txt">GPLv3</license>
        <return type="binary-array" />
        <operation type="simple"/>
    </info>
    <args>
		<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">input measure type</argument>
		<argument type="oph_type" mandatory="yes" values="'oph_double'|'oph_float'|'oph_int'|'oph_long'|'oph_short'|'oph_byte'">output measure type</argument>
		<argument type="binary-array" mandatory="yes">measure</argument>
		<argument type="double" mandatory="no" default="1">scalar value</argument>
		<argument type="double" mandatory="no" default="0">translation value</argument>
    </args>
</primitive>
